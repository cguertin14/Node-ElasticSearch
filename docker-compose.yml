version: '3.6'

services:
  api:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    links:
      - elasticsearch
      - redis
    depends_on:
      - elasticsearch
      - kibana
      - logstash
      - redis
    networks:
      - backend
    expose: 
      - 3000
  
  elasticsearch:
    build:
      context: deployment/elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./deployment/elasticsearch/config/elasticsearch.yml:/usr/share/deployment/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - backend

  kibana:
    build:
      context: deployment/kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./deployment/kibana/config/:/usr/share/deployment/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - backend
    depends_on:
      - elasticsearch

  logstash:
    build:
      context: deployment/logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./deployment/logstash/config/logstash.yml:/usr/share/deployment/logstash/config/logstash.yml:ro
      - ./deployment/logstash/pipeline:/usr/share/deployment/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - backend
    depends_on:
      - elasticsearch

  redis:
    image: redis
    volumes: 
      - redis:/data/db/
    networks:
      - backend
    ports:
      - "6379:6379"

  nginx:
    image: nginx
    build: deployment/nginx
    ports:
      - "8080:80"
    depends_on:
      - api
    networks: 
      - backend
    

networks:
  backend:
    driver: bridge

volumes:
  redis: